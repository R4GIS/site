<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutoriais on Curso-R</title>
    <link>http://curso-r.com/categories/tutoriais/</link>
    <description>Recent content in Tutoriais on Curso-R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>Copyright (c) 2016 - 2017, Curso-R; all rights reserved.</copyright>
    <lastBuildDate>Thu, 16 Nov 2017 14:25:00 +0300</lastBuildDate>
    
	<atom:link href="http://curso-r.com/categories/tutoriais/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Matrizes Esparsas no R</title>
      <link>http://curso-r.com/blog/2017/11/16/2017-11-16-matrizes-esparsas/</link>
      <pubDate>Thu, 16 Nov 2017 14:25:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/11/16/2017-11-16-matrizes-esparsas/</guid>
      <description>Matrizes esparsas são matrizes em que a maior parte dos elementos é igual a zero. Matrizes dessa forma surgem em diversos problemas relacionados a Machine Learning e análise de dados.
Por exemplo, é comum em text mining representar os documentos usando o chamado Bag of Words. Bag of Words nada mais é do que listar as palavras que aparecem em todos os documentos e em seguida criar uma matriz em que cada linha é um documento e cada coluna é uma palavra que poderia ter aparecido neste documento.</description>
    </item>
    
    <item>
      <title>Usando o cronR para Agendar Scripts</title>
      <link>http://curso-r.com/blog/2017/11/13/2017-11-13-tutorial-cronr/</link>
      <pubDate>Mon, 13 Nov 2017 14:25:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/11/13/2017-11-13-tutorial-cronr/</guid>
      <description>Nem sempre os dados que precisamos para uma análise podem ser encontrados em uma base consolidada. Muitas vezes as informações que queremos não estão imediatamente disponíveis e precisam ser coletadas com o tempo através de um processo lento e monótono.
Imagine, por exemplo, que quiséssemos baixar os dados meteorológicos das maiores cidades do mundo a cada 12 horas para uma análise sobre previsões do tempo. Um programador desavisado talvez criasse alarmes em seu relógio e para baixar as tabelas necessárias quando eles tocassem.</description>
    </item>
    
    <item>
      <title>Curso-R na aMostra de Estatística 2017</title>
      <link>http://curso-r.com/blog/2017/10/19/2017-10-19-cursor-amostra/</link>
      <pubDate>Thu, 19 Oct 2017 10:12:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/10/19/2017-10-19-cursor-amostra/</guid>
      <description>Nas últimas semanas sumimos um pouco aqui do blog, pois estávamos ocupados na aMostra de Estatística no IME-USP.
O evento teve a organização impecável graças aos alunos do bacharelado em estatística Lucas Hamaguchi, Beatriz Vianna, Gabriela Uhrigshardt, Milene Farhat, Luíza Baratojo, Rodrigo Marcel Araujo Oliveira e do Prof. Victor Fossaluza. Parabens a todos!
A Curso-R participou do evento ministrando 3 oficinas abordando tópicos bem distintos sobre programação em R. Graças à fantástica organização, todas as palestras foram gravadas e agora podem ser revistas pelo YouTube da aMostra.</description>
    </item>
    
    <item>
      <title>Filtros de Bloom em R</title>
      <link>http://curso-r.com/blog/2017/09/18/2017-09-18-bloom-filter/</link>
      <pubDate>Mon, 18 Sep 2017 10:12:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/09/18/2017-09-18-bloom-filter/</guid>
      <description>Filtro de Bloom é um algoritmo muito interessante para testar se um elemento pertence a um conjunto. Ele é considerado uma estrutura de dados probabilística, ou seja, o resultado pode não estar correto com alguma probabilidade. Especificamente para o filtro de bloom, existe a possibilidade de falsos positivos mas não de falsos negativos: o algoritmo pode dizer que o elemento pertence ao conjunto, mas na verdade não pertencer, mas nunca dirá que ele não pertence sendo que ele pertence.</description>
    </item>
    
    <item>
      <title>brcrimR</title>
      <link>http://curso-r.com/blog/2017/09/13/2017-09-13-brcrimr/</link>
      <pubDate>Wed, 13 Sep 2017 10:12:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/09/13/2017-09-13-brcrimr/</guid>
      <description>Em maio deste ano, escrevi um post sobre web scraping dos dados da secretaria de segurança pública de São Paulo. Como o título indica, o foco do texto é mostrar como se raspa a página de estatísticas da SSP, mas, mais do que isso, o texto também sugere um roteiro de construção de web scrapers.
Neste post, venho divulgar uma expansão do conteúdo do post passado. Agora é possível acessar os dados da SSP diretamente no R usando o pacote brcrimR, mas a ideia é que no futuro todas as informações divulgadas por alguma Secretaria de Segurança fiquem disponíveis diretamente no R!</description>
    </item>
    
    <item>
      <title>Pacotes miojo - como fazer um pacote no R em 3 minutos</title>
      <link>http://curso-r.com/blog/2017/09/07/2017-09-07-pacote-miojo/</link>
      <pubDate>Thu, 07 Sep 2017 23:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/09/07/2017-09-07-pacote-miojo/</guid>
      <description>Nesse post vou mostrar como fazer um pacote em R muito, muito rápido. Tirei várias coisas que costumo fazer nos pacotes, com dor no coração, tudo pela velocidade, mantendo só o essencial.
Duas restrições que usei são
O pacote precisa ficar disponível no GitHub. O pacote precisa ter pelo menos uma função.  Essa é a solução que eu acho mais segura e rápida. Você também pode usar o próprio RStudio para criar pacotes ou clonar coisas do github, mas isso pode dar alguns bugs.</description>
    </item>
    
    <item>
      <title>Como fazer o R avisar pelo telegram que bitcoin tá barato</title>
      <link>http://curso-r.com/blog/2017/08/19/2017-08-19-r-telegram-bitcoin/</link>
      <pubDate>Sat, 19 Aug 2017 10:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/08/19/2017-08-19-r-telegram-bitcoin/</guid>
      <description>O ponto máximo da história é o R mandando mensagem pro Telegram. Só para motivar, vou contar o que fiz de divertido usando telegram e preços de bitcoin.
Herói do dia: Luca Biglia, autor do pacote telegram do R.
O que faremos Como mencionei, Vou construir um Acompanhador de bitcoin pra ilustrar e ao fim do post teremos feito o R mandar um telegram quando o preço da bitcoin atingir um dado patamar.</description>
    </item>
    
    <item>
      <title>Arrumando BDs: o pacote janitor</title>
      <link>http://curso-r.com/blog/2017/07/24/2017-07-24-janitor/</link>
      <pubDate>Mon, 24 Jul 2017 23:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/24/2017-07-24-janitor/</guid>
      <description>No primeiro post sobre arrumação de base de dados, a gente viu como usar as funções do stringr para arrumar o nome das variáveis. Seguindo a dica do Julio, o quebrador de captchas, vamos falar do pacote janitor, que traz algumas funções para dar aquele trato nas BDs.
Antes de mais nada, instale e carregue o pacote:
install.packages(&amp;quot;janitor&amp;quot;) devtools::install_github(&amp;quot;sfirke/janitor&amp;quot;) # Versão de desenvolvimento library(tidyverse) library(janitor) Arrumando o nome das variáveis Assim como no post passado, utilizaremos a base com informações de pacientes com arritmia cardíaca, cujas variáveis selecionadas foram:</description>
    </item>
    
    <item>
      <title>Salvando data.frames: uma comparação</title>
      <link>http://curso-r.com/blog/2017/07/20/2017-07-20-escrevendo-data-frames/</link>
      <pubDate>Thu, 20 Jul 2017 00:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/20/2017-07-20-escrevendo-data-frames/</guid>
      <description>Salvar data.frames para ler depois é uma tarefa muito comum para quem trabalha com R, principalmente quando o seu processo possui algumas etapas mais demoradas e você não quer ter que rodar tudo de novo.
Veja aqui 3 formas fáceis, e rápidas para salvar o seu banco de dados e não perder tempo lendo novamente.
saveRDS Talvez a função mais conhecida para salvar objetos do R. Ela salva em um formato binário que só pode ser lido pelo R.</description>
    </item>
    
    <item>
      <title>RStudio e Github no dia a dia</title>
      <link>http://curso-r.com/blog/2017/07/17/2017-07-17-rstudio-e-github/</link>
      <pubDate>Mon, 17 Jul 2017 00:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/17/2017-07-17-rstudio-e-github/</guid>
      <description>Versionamento de código é uma ferramenta que veio para ficar. Não dá para calcular o quanto de dor de cabeça, horas perdidas e frustrações ela economiza e já economizou na história da humanidade.
Um dos programas que faz isso para a gente se chama Git. E não confundir com Github (que vamos usar para exemplificar mais para frente) que é um serviço que hospeda repositórios “controlados” pelo Git.
Ao final do post você estará apto(a) a trabalhar com Github no seu RStudio.</description>
    </item>
    
    <item>
      <title>Arrumando BDs: nome das variáveis</title>
      <link>http://curso-r.com/blog/2017/07/12/2017-07-13-bds_nomes_variaveis/</link>
      <pubDate>Wed, 12 Jul 2017 23:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/12/2017-07-13-bds_nomes_variaveis/</guid>
      <description>Arrumar base de dados é uma tarefa chata, perigosa e pode consumir uma grande parcela do tempo total do projeto.
A tarefa é chata porque é um grande retrabalho que muitas vezes cai na mão dos estatísticos. Mandar de volta para o responsável corrigir é uma opção, mas já passei por situações em que o tempo perdido no vai-e-vem da bd foi bem maior do que o tempo que eu gastaria para arrumar eu mesmo (e no fim, o banco ainda continha erros).</description>
    </item>
    
    <item>
      <title>Greta</title>
      <link>http://curso-r.com/blog/2017/07/08/2017-07-09-greta/</link>
      <pubDate>Sat, 08 Jul 2017 10:12:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/08/2017-07-09-greta/</guid>
      <description>Estou bem longe de ter experiência em modelagem bayesiana usando linguagens de programação probabilística como Stan ou BUGS, mas vi esse pacote chamado greta que me chamou a atenção.
O greta é um pacote feito totalmente em R, mas que usa o TensorFlow como backend para fazer os seus cálculos. Isso tudo por intermédio do reticulate. A vantagem de usar o TensorFlow como backend é a escalabilidade: o greta pode ser rápido até mesmo em bases de dados grandes e também pode ser acelerada usando clusters de CPU’s ou GPU’s.</description>
    </item>
    
    <item>
      <title>WoE em R com tidywoe</title>
      <link>http://curso-r.com/blog/2017/07/06/2017-07-06-tidywoe/</link>
      <pubDate>Thu, 06 Jul 2017 10:12:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/06/2017-07-06-tidywoe/</guid>
      <description>WoE (weight of evidence) é uma ferramenta bastante usada em aplicações de regressão logística, principalmente na área de score de crédito. Simploriamente falando, ele transforma categorias em números que refletem a diferença entre elas pelo critério de separação do Y = 1 e Y = 0.
Se você ainda não sabe o que é ou quer ler mais sobre o assunto, um texto que eu gostei de ler:
 Data Exploration with Weight of Evidence and Information Value in R  O autor desse texto é o Kim Larsen, criador do pacote Information que é completo e cheio de ferramentas sofisticadas em torno do WoE.</description>
    </item>
    
    <item>
      <title>Forcats</title>
      <link>http://curso-r.com/blog/2017/07/01/2017-07-01-forcats/</link>
      <pubDate>Sat, 01 Jul 2017 23:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/01/2017-07-01-forcats/</guid>
      <description>Se você ainda não é adepta ou adepto do tidyverse, provavelmente precisa setar stringsAsFactors = FALSE em algum momento ou sempre trabalha com fatores em vez de strings.
Strings são sequências de caracteres que podem ser acessados pela sua posição. Assim, podemos usar expressões regulares para modificar partes da sequência que correspondam a um determinado padrão. Fatores são inteiros com categorias (ou labels) formadas por strings guardadas apenas uma vez no atributo levels.</description>
    </item>
    
    <item>
      <title>Skimr: estatísticas básicas com ❤️</title>
      <link>http://curso-r.com/blog/2017/06/17/2017-06-17-skimr/</link>
      <pubDate>Sat, 17 Jun 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/06/17/2017-06-17-skimr/</guid>
      <description>Entre os dias 25 e 27 de maio aconteceu a ROpenSci Unconf 2017. O encontro reuniu vários pop stars da comunidade R como Hadley Wickham, Joe Cheng (criador do shiny), Jeroen Ooms (criador do OpenCPU e autor de vários pacotes bacanas), Jenny Bryan (autora de vários pacotes bacanas como googlesheets), várias pessoas do #R-Ladies e muito mais.
Uma coisa muito legal dessa conferência é que ela funcionou como uma hackathon. Foi criada uma nova organização no github chamada ROpenSci Labs, e os presentes simplesmente começaram a subir pacotes fantásticos lá dentro.</description>
    </item>
    
    <item>
      <title>Instalando Anaconda &#43; TensorFlow &#43; Keras para R no Ubuntu 16.04 Server</title>
      <link>http://curso-r.com/blog/2017/06/08/2017-06-08-keras-no-ubuntu/</link>
      <pubDate>Thu, 08 Jun 2017 21:12:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/06/08/2017-06-08-keras-no-ubuntu/</guid>
      <description>Compilei um passo a passo mais simplificado dos posts que usei pra conseguir usar o Keras num servidor Ubuntu.
Esse tutorial ensinará como instalar o Anaconda com Python 3.5 em um servidor Ubuntu 16.04 + Keras para R. Então ao final desse post você terá o Keras direto do seu R pronto para abalar os profundos mares da aprendizagem de máquinas.
Pré-requisitos O tutorial supõe que você possui um servidor Ubuntu 16.</description>
    </item>
    
    <item>
      <title>A kind of magick</title>
      <link>http://curso-r.com/blog/2017/06/01/2017-06-01-a-kind-of-magick/</link>
      <pubDate>Thu, 01 Jun 2017 23:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/06/01/2017-06-01-a-kind-of-magick/</guid>
      <description>Já vimos como o Rstudio se torna uma ferramenta poderosa quando combinado com certos pacotes, como o knitr e shiny, ou outros recursos, como o markdown e o git. Hoje, veremos como transformar o Rstudio num elegante e interativo editor de imagens utilizando o pacote magick.
Este post é um breve resumo das funcionalidades do magick. Para uma apresentação completa, visite o vignette do pacote.
Já usamos o magick em outros posts do blog (às vezes por trás das cortinas) para tratar imagens.</description>
    </item>
    
    <item>
      <title>PDF e OCR</title>
      <link>http://curso-r.com/blog/2017/05/28/2017-05-27-ocr/</link>
      <pubDate>Sun, 28 May 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/05/28/2017-05-27-ocr/</guid>
      <description>Já precisou extrair dados de arquivos pdf? Bom, eu já. Eu trabalho com jurimetria e preciso extrair dados de diários oficiais, petições, sentenças, então já viu né…
A primeira pergunta que você precisa fazer antes de ler um pdf é: o arquivo é digital ou digitalizado?
 Se for digital, significa que ele pode ser transcrito diretamente para vários formatos: texto, html, xml e até mesmo data.frames diretamente.  Vamos usar esse exemplo de PDF digital</description>
    </item>
    
    <item>
      <title>Gráficos miojo: Mapas temáticos do Brasil em 3 minutos ou menos</title>
      <link>http://curso-r.com/blog/2017/05/04/2017-05-04-mapas-tematicos-3-minutos/</link>
      <pubDate>Thu, 04 May 2017 23:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/05/04/2017-05-04-mapas-tematicos-3-minutos/</guid>
      <description>De todas as visualizações, mapas são aquelas que impressionam mais. É muito mais fácil alguém se maravilhar com o mapa mais simples do que com o ggplot2 mais complicado. Felizmente, considerando essa comparação, o R disponibiliza muitos recursos para construir mapas.
Dentro do tidyverse é possível construir mapas usando a função geom_map, do pacote ggplot2, mas está fora do escopo deste post explicar como ela funciona. Aqui vamos apenas descobrir como usá-la para agilizar a construção de um gráfico simples.</description>
    </item>
    
    <item>
      <title>Diagramas de Venn em R</title>
      <link>http://curso-r.com/blog/2017/04/29/2017-04-29-diagramas-de-venn/</link>
      <pubDate>Sat, 29 Apr 2017 23:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/04/29/2017-04-29-diagramas-de-venn/</guid>
      <description>Diagramas de Venn são como slides de PowerPoint. Se eles tem poucos elementos concisos em uma ordem inteligente, um leitor consegue conectar as ideias expostas e aprender alguma coisa. Em caso contrário, o excesso de informação se transforma em um obstáculo para a comunicação.
Bons diagramas de Venn são capazes de te fazer perceber cruzamentos que não estão no seu radar. No blog do Andrew Gelman tem um exemplo interessante. Ele considera uma oração, em inglês, que pede:</description>
    </item>
    
    <item>
      <title>Tratando erros: the tidy way</title>
      <link>http://curso-r.com/blog/2017/04/20/2017-04-09-try/</link>
      <pubDate>Thu, 20 Apr 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/04/20/2017-04-09-try/</guid>
      <description>Tratar erros no R é importante para identificar problemas nos códigos e evitar retrabalho. Quem nunca rodou um algoritmo pesadíssimo que deu errado na última iteração? Nesse artigo, veremos como trabalhar com erros no R e a versão tidy dessas soluções.
Usando try() e tryCatch() A forma tradicional de tratar erros no R é com a função tryCatch(). Essa função tem como primeiro argumento uma expressão a ser avaliada e argumentos diversos para trabalhar com os erros.</description>
    </item>
    
    <item>
      <title>Colando textos</title>
      <link>http://curso-r.com/blog/2017/04/17/2017-04-08-glue/</link>
      <pubDate>Mon, 17 Apr 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/04/17/2017-04-08-glue/</guid>
      <description>Uma tarefa muito comum no R é colar textos. As funções mais importantes para isso são paste() e sprintf(), que vêm com o pacote base. Nesse artigo, vamos falar dessas duas funções e de um novo pacote do tidyverse, o glue.
paste() A função paste() recebe um conjunto indeterminado de objetos como argumento através do ... e vai colando os objetos passados elemento a elemento. Isso significa que se você passar dois vetores de tamanho n, a função paste() retornará um vetor de tamanho n sendo cada posição a colagem dos dois vetores nessa posição.</description>
    </item>
    
    <item>
      <title>As barras do progresso</title>
      <link>http://curso-r.com/blog/2017/04/10/2017-04-08-progress/</link>
      <pubDate>Mon, 10 Apr 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/04/10/2017-04-08-progress/</guid>
      <description>Na jornada da ciência de dados, muitas vezes precisamos rodar um mesmo algoritmo em vários objetos distintos. Quando o algoritmo é pesado ou a lista de objetos é longa, é importante saber em que passo estamos e quanto vai demorar para terminar.
Uma forma de resolver esse problema é usando o pacote progress. O objeto progress_bar desse pacote é do tipo R6 e tem um método new() para criar objetos do tipo “barra”.</description>
    </item>
    
    <item>
      <title>Knitr: mudando o diretório de trabalho</title>
      <link>http://curso-r.com/blog/2017/03/25/2017-03-25-knitr-mudando-diretorio-de-trabalho/</link>
      <pubDate>Sat, 25 Mar 2017 23:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/03/25/2017-03-25-knitr-mudando-diretorio-de-trabalho/</guid>
      <description>O pacote knitr é um mecanismo rápido, elegante e flexível para gerar relatórios dinâmicos no R. Ele trabalha lado a lado com o rmarkdown para transformar arquivos .Rmd em diversos formatos, como html, pdf e até mesmo word. Misturando chunks de código em R com texto puro, LaTeX e html, a tarefa de criar outputs para análises estatísticas no R ficou muito mais simples.
Quando estamos trabalhando com arquivos Rmarkdown no Rstudio, o diretório de trabalho é a própria pasta onde o Rmd está salvo.</description>
    </item>
    
    <item>
      <title>Paralelização no R</title>
      <link>http://curso-r.com/blog/2017/03/19/2017-03-14-parallel/</link>
      <pubDate>Sun, 19 Mar 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/03/19/2017-03-14-parallel/</guid>
      <description>Programadores eficientes não precisam escrever algoritmos que rodam rápido. Recomendo fortemente a leitura do livro Efficient R, que discute eficiência com o R de forma exaustiva. Também gosto muito da primeira parte dessa palestra do Hadley, onde ele defende que o cientista de dados deve usar seu tempo pensando no problema e não na forma que vai escrever seu código.
Com isso em mente, vamos investigar o tema paralelização. Quando rodamos coisas em paralelo, mandamos os núcleos de processamento da máquina calcularem coisas diferentes ao mesmo tempo.</description>
    </item>
    
    <item>
      <title>Medidas-resumo no tidyverse</title>
      <link>http://curso-r.com/blog/2017/03/11/2017-02-20-quartis/</link>
      <pubDate>Sat, 11 Mar 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/03/11/2017-02-20-quartis/</guid>
      <description>Hoje estava fazendo uma análise exploratória e precisava estudar os quartis de uma variável contínua. A solução usando o tidyverse é tão elegante que valeu um post no blog.
Usaremos os pacotes tibble, dplyr, tidyr e purrr:
library(tibble) library(dplyr) library(tidyr) library(purrr) Nesse exemplo, usamos a famosa base mtcars
tab &amp;lt;- mtcars %&amp;gt;% group_by(am, vs) %&amp;gt;% nest() %&amp;gt;% mutate(quartis = map(data, ~enframe(quantile(.x$mpg, 1:3 / 4)))) %&amp;gt;% unnest(quartis) %&amp;gt;% spread(name, value) tab ## # A tibble: 4 x 5 ## am vs `25%` `50%` `75%` ## * &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; ## 1 0 0 14.</description>
    </item>
    
    <item>
      <title>Modelando a variância da normal</title>
      <link>http://curso-r.com/blog/2017/03/09/2017-02-21-regressao-heterocedastica/</link>
      <pubDate>Thu, 09 Mar 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/03/09/2017-02-21-regressao-heterocedastica/</guid>
      <description>Verificar as suposições dos modelos é muito importante quando fazemos inferência estatística. Em particular, a suposição de homocedasticidade1 dos modelos de regressão linear é especialmente importante, pois modifica o cálculo de erros padrão, intervalos de confiança e valores-p.
Neste post, vou mostrar três pacotes do R que ajustam modelos da forma
\[ Y_i = \beta_0 + \sum_{k=1}^p\beta_kx_{ik} + \epsilon_i, \ i = 1,\ldots,n\]
\[ \epsilon_{i} \sim \textrm{N}(0,\sigma_i), \ i = 1,\ldots,n \ \textrm{independentes, com }\sigma_i^2 = \alpha x_i^2.</description>
    </item>
    
    <item>
      <title>leaflet com markerCluster</title>
      <link>http://curso-r.com/blog/2017/03/01/2017-02-21-markercluster/</link>
      <pubDate>Wed, 01 Mar 2017 23:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/03/01/2017-02-21-markercluster/</guid>
      <description>O leaflet é uma biblioteca javascript para criação de mapas interativos. O pacote leaflet do R é um htmlwidget que permite gerar esses mapas de forma direta no R, para usar em documentos RMarkdown e Shiny.
Uma das ferramentas que mais gosto do leaflet é a função markerClusterOptions(), que permite agrupar pontos no mapa em conjuntos de vários pontos.
Como exemplo, utilizaremos uma base de dados que contém a localização e informações das varas da Justiça Estadual no Brasil.</description>
    </item>
    
    <item>
      <title>Pacote ggalt</title>
      <link>http://curso-r.com/blog/2017/02/18/2017-02-18-ggalt/</link>
      <pubDate>Sat, 18 Feb 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/02/18/2017-02-18-ggalt/</guid>
      <description>O pacote ggalt é uma extensão ao ggplot2 que permite fazer algumas coisas muito úteis. Uma delas é a possibilidade de fazer faixas de confiança para gráficos do tipo escada. Isso permite adicionar intervalos de confiança para modelos Kaplan-Meier, muito utilizados em Análise de Sobrevivência.
É possível instalar o pacote ggalt usando a função install.packages():
install.packages(&amp;#39;ggalt&amp;#39;) Para exemplificar a utilização do ggalt, vamos utilizar os pacotes abaixo.
library(dplyr) library(ggplot2) library(ggalt) library(broom) library(survival) Nesse exemplo, utilizaremos a base de dados lung que vem com o pacote survival.</description>
    </item>
    
  </channel>
</rss>