<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Daniel on Curso-R</title>
    <link>http://curso-r.com/author/daniel/index.xml</link>
    <description>Recent content in Daniel on Curso-R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>Copyright (c) 2016 - 2017, Curso-R; all rights reserved.</copyright>
    <atom:link href="http://curso-r.com/author/daniel/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>K-means e paleta de cores</title>
      <link>http://curso-r.com/blog/2017/04/22/2017-04-21-paleta-de-cores/</link>
      <pubDate>Sat, 22 Apr 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/04/22/2017-04-21-paleta-de-cores/</guid>
      <description>&lt;p&gt;Uma aplicação interessante de algoritmos de clusterização é a obtenção de paletas de cores a partir de imagens. Veja como isso pode ser feito usando o R.&lt;/p&gt;
&lt;p&gt;Em primeiro lugar, vamos ler a imagem como uma matriz para o R. Existem diversas bibliotecas para carregar as imagens, vamos usar aqui a &lt;a href=&#34;https://CRAN.R-project.org/package=jpeg&#34;&gt;&lt;code&gt;jpeg&lt;/code&gt;&lt;/a&gt;. Para esse caso ela é melhor porque já lê a imagem no formato que precisamos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(jpeg)
library(magrittr)
img &amp;lt;- readJPEG(&amp;quot;img/david-bowie.jpg&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A imagem lida pelo pacote &lt;code&gt;jpeg&lt;/code&gt; é representada por um &lt;code&gt;array&lt;/code&gt; com dimensões: &lt;code&gt;c(altura, largura, n_bandas)&lt;/code&gt; que no nosso caso é &lt;code&gt;c(1100, 727, 3)&lt;/code&gt;. O número de bandas é 3: R, G e B.&lt;/p&gt;
&lt;p&gt;Podemos exibir a imagem no R, convertendo o array, primeiro em um obheto do tipo &lt;code&gt;raster&lt;/code&gt; e depois simplesmente usando a função &lt;code&gt;plot&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(as.raster(img))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-21-paleta-de-cores_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;p&gt;O problema de obter a paleta de cores de uma imagem pode ser formulado como um problema de clusterização: “obter grupos de individuos que possuem a menor diferença dentro de cada um e a maior diferença possível entre os grupos de acordo com algumas características das unidades amostrais”.&lt;/p&gt;
&lt;p&gt;Nesse caso, os indivíduos são os pixels da imagem e as características que estamos interessados são os valores de R, de G e de B (valores que representam a cor do pixel). Para o algortimos de clusterização, precisamos de uma matriz com as 3 colunas R, G e B e largura*altura (numero de pixels) linhas representado os indivíduos. É exatamente essa conversão que o trecho de código a seguir realiza.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;img_matrix &amp;lt;- apply(img, 3, as.numeric)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Agora temos uma matriz com 3 colunas e 799.700 linhas. Vamos aplicar agora o algoritmo k-means, para organizar cada um desses pixels em um grupo. O K-means pede o número de grupos como input, vamos começar com 6.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;km &amp;lt;- kmeans(img_matrix, centers = 6)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O objeto gerado pela função &lt;code&gt;kmeans&lt;/code&gt; armazena um vetor chamado &lt;code&gt;cluster&lt;/code&gt; (do tamanho do número de linhas da matriz) com um identificador do grupo de cada observação da matriz.&lt;/p&gt;
&lt;p&gt;A cor que representa cada um dos grupos é representada pelo vetor c(r, g, b) com a média de todas as observações de cada um dos grupos. Podemos obter isso com algumas manipulações usando o &lt;code&gt;dplyr&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tibble)
library(dplyr)
## 
## Attaching package: &amp;#39;dplyr&amp;#39;
## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag
## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union
img_df &amp;lt;- tibble(
  r = img_matrix[,1], 
  g = img_matrix[,2], 
  b = img_matrix[,3],
  cluster = km$cluster
  )
centroides &amp;lt;- img_df %&amp;gt;%
  group_by(cluster) %&amp;gt;%
  summarise_all(mean)

centroides
## # A tibble: 6 x 4
##   cluster         r          g         b
##     &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
## 1       1 0.7016587 0.46722512 0.3238206
## 2       2 0.1242676 0.04329523 0.2157608
## 3       3 0.3542030 0.46237875 0.5494285
## 4       4 0.8768120 0.76211694 0.6453261
## 5       5 0.2212860 0.27343498 0.4408806
## 6       6 0.5005265 0.18317569 0.1587972&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Também transformamos uma cor r, g e b em uma representação hexadecimal. Assim conseguimos um vetor de caracteres que representa a a paleta de cores.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;centroides &amp;lt;- centroides %&amp;gt;%
  mutate(cor = rgb(r, g, b))
centroides$cor
## [1] &amp;quot;#B37753&amp;quot; &amp;quot;#200B37&amp;quot; &amp;quot;#5A768C&amp;quot; &amp;quot;#E0C2A5&amp;quot; &amp;quot;#384670&amp;quot; &amp;quot;#802F28&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para exibir a paleta vamos usar a seguinte função que foi copiada e levemente modificada &lt;a href=&#34;https://github.com/karthik/wesanderson&#34;&gt;daqui&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;exibir &amp;lt;- function(x) {
  n &amp;lt;- length(x)
  old &amp;lt;- par(mar = c(0.5, 0.5, 0.5, 0.5))
  on.exit(par(old))

  image(1:n, 1, as.matrix(1:n), col = x,
        ylab = &amp;quot;&amp;quot;, xaxt = &amp;quot;n&amp;quot;, yaxt = &amp;quot;n&amp;quot;, bty = &amp;quot;n&amp;quot;)
}
exibir(sort(centroides$cor))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-21-paleta-de-cores_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Assim obtivemos uma paleta de cores da imagem que mostramos anteriormente. Vamos colocar todo o código que fizemos passo a passo aqui em uma única função para podermos facilmente criar a paleta de cores para outras imagens.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;criar_paleta &amp;lt;- function(img, num_cores){
  # transforma a imagem em uma matriz
  img_matrix &amp;lt;- apply(img, 3, as.numeric)
  # treina o algoritmo de k médias
  km &amp;lt;- kmeans(img_matrix, centers = num_cores)
  img_df &amp;lt;- tibble(
    r = img_matrix[,1], 
    g = img_matrix[,2], 
    b = img_matrix[,3],
    cluster = km$cluster
  )
  # calcula os centroides dos grupos
  centroides &amp;lt;- img_df %&amp;gt;%
    group_by(cluster) %&amp;gt;%
    summarise_all(mean)
  # transforma a cor em hexadecimal
  centroides &amp;lt;- centroides %&amp;gt;%
    mutate(cor = rgb(r, g, b))
  # vetor de cores
  sort(centroides$cor)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vejamos agora o que acontece com essa bela imagem do filme Moonrise Kingdom do Wes Anderson, que é famoso por fazer filmes com belas paletas de cores.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;moonrise &amp;lt;- readJPEG(&amp;quot;img/moonrise-kingdom.jpg&amp;quot;)
plot(as.raster(moonrise))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-21-paleta-de-cores_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;1536&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;paleta &amp;lt;- criar_paleta(moonrise, 6)
exibir(paleta)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-21-paleta-de-cores_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;É isso. Se você gostou, tente fazer com outras imagens e compartilhe com a gente os resultados.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Multas em São Paulo</title>
      <link>http://curso-r.com/blog/2017/04/01/2017-04-01-multas-em-sp/</link>
      <pubDate>Sat, 01 Apr 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/04/01/2017-04-01-multas-em-sp/</guid>
      <description>&lt;p&gt;Há bastante tempo tenho vontade de fazer análises usando dados de multas de São Paulo. O problema é: estes dados estão disponíveis? Na teoria, sim. Os dados de multas, como quantidade de multas por tipo de infração, dia e horário, e outros são divulgados no &lt;a href=&#34;http://mobilidadesegura.prefeitura.sp.gov.br/QvAJAXZfc/opendoc.htm?document=Painel_Mobilidade_Segura.qvw&amp;amp;host=QVS%40c65v27i&amp;amp;anonymous=true&#34;&gt;portal da Mobilidade Segura&lt;/a&gt; da Prefeitura de São Paulo. Na prática, é um pouco diferente. Apesar do site fornecer uma opção de exportação, a tabela exportada não é completa e muitas informações ficam faltando. Dá bastante trabalho para exportar todas as informações.&lt;/p&gt;
&lt;p&gt;Para não ter o trabalho de exportar tabela por tabela, fiz uma requisição para a prefeitura, por meio da Lei de Acesso à Informação, pedindo acesso direto ao banco de dados que fornece as informações para o Portal. A resposta foi a seguinte:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Prezado Senhor Daniel, Agradecemos o contato e informamos que o seu pedido foi indeferido com fundamento no art. 16, inciso III, do Decreto nº 53.623/2012, pois a base de dados contém informações pessoais que não podem ser disponibilizadas a terceiros. Os demais dados encontram-se inseridos no Painel Mobilidade Segura para consulta pelos interessados com a possibilidade de exportar arquivos. Informamos ainda que na época da sua solicitação, os painéis se encontravam atualizados, visto que a atualização mensal ocorre após os 70 dias da data da infração&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A resposta ao meu ver é totalmente contraditória: ao mesmo tempo que eu não posso receber os dados porque eles são confidenciais, eu posso obtê-los pelo site, que “oferece possibilidade de exportação de arquivos”. (???)&lt;/p&gt;
&lt;p&gt;Antes mesmo de pedir acesso ao banco de dados tinha pensado em desenvolver um webscrapper para fazer o download automático das planilhas, mas a tecnologia com a qual o portal foi desenvolvido (QlikView) dificulta muito o desenvolviento.&lt;/p&gt;
&lt;p&gt;Sobrou fazer o download manual mesmo. Até agora fiz o download de todos as planilhas de 2014 a 2016 contendo infrações capturadas tanto eletrônica quanto manualmente de carros (ainda faltam ônibus, utilitários, etc.) por hora do dia. Isso quer dizer que já temos planilhas suficientes para criar uma tabela:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tipo de veículo (sempre seria carro)&lt;/li&gt;
&lt;li&gt;data (2014 a 2016)&lt;/li&gt;
&lt;li&gt;hora do dia&lt;/li&gt;
&lt;li&gt;eletronica/manual&lt;/li&gt;
&lt;li&gt;motivo da multa&lt;/li&gt;
&lt;li&gt;localizacao da multa (quando for um radar)&lt;/li&gt;
&lt;li&gt;quantidade de multas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disponibilizei esses dados &lt;a href=&#34;https://github.com/dfalbel/spmultas&#34;&gt;neste repositório&lt;/a&gt; do Github.&lt;/p&gt;
&lt;p&gt;Agora com as análises a seguir, espero criar curiosidade e interesse para que mais pessoas possam ajudar no download completo dos dados. Na página inicial do repositório, adicionei, um mini-tutorial de como você pode ajudar fazendo os downloads.&lt;/p&gt;
&lt;p&gt;Vamos às análises.&lt;/p&gt;
&lt;div id=&#34;obter-os-dados&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Obter os dados&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;download.file(&amp;quot;https://github.com/dfalbel/spmultas/raw/master/data/carros_eletronicas.rda&amp;quot;, &amp;quot;carros_eletronicas.rda&amp;quot;)
load(&amp;quot;carros_eletronicas.rda&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A partir de agora, você possui carregado um &lt;code&gt;data.frame&lt;/code&gt; chamado &lt;code&gt;carros_eletronicas&lt;/code&gt; que possui as informações das multas para carros de forma eletrônica.&lt;/p&gt;
&lt;p&gt;Em primeiro lugar, vamos analisar a quantidade de multas por dia em São Paulo desde 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizar-a-serie&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualizar a série&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;carros_eletronicas %&amp;gt;%
  group_by(data) %&amp;gt;%
  summarise(qtd = sum(qtd)) %&amp;gt;%
  ggplot(aes(data, qtd)) +
  geom_line()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-01-multas-em-sp_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Vemos nesse gráfico que o número de multas (por radar) era sempre por volta de 10.000 durante 2014, em 2015 foi aumentando bastante durante o ano e em 2016 se estabilizou. Vamos ver agora, por tipo de enquadramento, isto é, por motivo da multa.&lt;/p&gt;
&lt;p&gt;Existem 11 tipos de enquadramentos eletrônicos. Para a visualização ficar mais fácil, vamos primeiro agrupar em grandes temas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avançar o sinal vermelho&lt;/li&gt;
&lt;li&gt;Executar conversão proibida&lt;/li&gt;
&lt;li&gt;Parar sobre faixa de pedestres&lt;/li&gt;
&lt;li&gt;Rodízio&lt;/li&gt;
&lt;li&gt;Velocidade&lt;/li&gt;
&lt;li&gt;Transitar em faixa de ônibus ou exclusiva p/ determinado veículo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O agrupamento final ficou assim:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;depara &amp;lt;- carros_eletronicas %&amp;gt;%
  group_by(enquadramento) %&amp;gt;%
  summarise(qtd = sum(qtd)) %&amp;gt;% 
  arrange(qtd) %&amp;gt;%
  select(-qtd)
depara$agrup_enquadramento &amp;lt;- c(&amp;quot;Conversão proibida&amp;quot;, &amp;quot;Velocidade&amp;quot;, &amp;quot;Faixa de Pedestres&amp;quot;, 
                                &amp;quot;Faixa de ônibus&amp;quot;, &amp;quot;Sinal vermelho&amp;quot;, &amp;quot;Faixa de ônibus&amp;quot;,
                                &amp;quot;Conversão proibida&amp;quot;, &amp;quot;Faixa de ônibus&amp;quot;, &amp;quot;Velocidade&amp;quot;,
                                &amp;quot;Rodízio&amp;quot;, &amp;quot;Velocidade&amp;quot;
                                )

depara %&amp;gt;% knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;enquadramento&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;agrup_enquadramento&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Executar Operacao De Conversao A Esquerda Em Local Proibido Pela Sinalizacao&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Conversão proibida&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Transitar Em Velocidade Superior A Maxima Permitida Em Mais De 50%&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Velocidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Parar Sobre Faixa De Pedestres Na Mudanca De Sinal Luminoso (Fisc Eletronica)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Faixa de Pedestres&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Transitar Na Faixa/Pista Da Esquerda Regul Circulacao Exclusiva Determ Veiculo&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Faixa de ônibus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Avancar O Sinal Vermelho Do Semaforo - Fiscalizacao Eletronica&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sinal vermelho&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Transitar Na Faixa/Pista Da Direita Regul Circulacao Exclusiva Determ Veiculo&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Faixa de ônibus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Executar Operacao De Conversao A Direita Em Local Proibido Pela Sinalizacao&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Conversão proibida&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Transitar Na Faixa Ou Via Exclusiva Regulam P/Transp Publ Coletivo Passag&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Faixa de ônibus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Transitar Em Velocidade Superior A Maxima Permitida Em Mais De 20% Ate 50%&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Velocidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Transitar Em Local/Horario Nao Permitido Pela Regulamentacao - Rodizio&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Rodízio&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Transitar Em Velocidade Superior A Maxima Permitida Em Ate 20%&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Velocidade&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;carros_eletronicas %&amp;gt;%
  left_join(depara, by = &amp;quot;enquadramento&amp;quot;) %&amp;gt;%
  group_by(data, agrup_enquadramento) %&amp;gt;%
  summarise(qtd = sum(qtd)) %&amp;gt;%
  ggplot(aes(data, qtd, color = agrup_enquadramento)) +
  geom_line()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-01-multas-em-sp_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;No gráfico, vemos que em 2015, o tipo de multa que mais aumentou em quantidade foi velocidade e rodízio.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;curiosidades&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Curiosidades&lt;/h2&gt;
&lt;p&gt;Anteriormente vimos como se comportou o número de multas de maneira geral na cidade. Vamos agora matar algumas curiosidades.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Quais são os horários com mais multas em SP?&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;carros_eletronicas %&amp;gt;% 
  group_by(hora) %&amp;gt;%
  summarise(qtd = sum(qtd)) %&amp;gt;%
  ggplot(aes(x = hora, y = qtd)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-01-multas-em-sp_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Notamos que o maior número de multas ocorre justamente na hora do rush. Isto é, entre 7 e 10 da manhã e 17h e 19h. Isso até faz sentido, mas nessas horas o trânsito da cidade está todo parado. Será que a distribuição fica diferente por tipo de multa? Principalmente as de velocidade.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;carros_eletronicas %&amp;gt;% 
  left_join(depara, by = &amp;quot;enquadramento&amp;quot;) %&amp;gt;%
  group_by(hora, agrup_enquadramento) %&amp;gt;%
  summarise(qtd = sum(qtd)) %&amp;gt;%
  ggplot(aes(x = hora, y = qtd, fill = agrup_enquadramento)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-01-multas-em-sp_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Veja que interessante! O grande responsável pelo pico da hora do rush é o rodízio. (Essa é justamente a hora em que ele está valendo.) As multas de velocidade diminuem um pouco durante o trânsito e acontecem mais durante o dia e não durante a noite como poderíamos imaginar. Vemos também que as multas de farol vermelho acontecem mais durante a madrugada.&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Qual é o dia da semana com mais multas?&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;carros_eletronicas %&amp;gt;% 
  left_join(depara, by = &amp;quot;enquadramento&amp;quot;) %&amp;gt;%
  group_by(dia_da_semana = wday(data), agrup_enquadramento) %&amp;gt;%
  summarise(qtd = sum(qtd)) %&amp;gt;%
  ggplot(aes(x = dia_da_semana, y = qtd, fill = agrup_enquadramento)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-01-multas-em-sp_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;O dia da semana com mais multas é quinta feira. Nos finais de semana, aumenta muito o número de multas por excesso de velocidade (claro, as ruas estão mais vazias).&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Quais são os radares que mais multam em SP? E porque?&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top10_locais &amp;lt;- carros_eletronicas %&amp;gt;%
  group_by(local) %&amp;gt;%
  summarise(n = sum(qtd)) %&amp;gt;%
  arrange(desc(n)) %&amp;gt;%
  slice(1:10)
knitr::kable(top10_locais)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;local&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Avenida Assis Chateaubriand X Acesso Pte Das Bandeiras, A.Sen/C. Bran&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;321629&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Avenida Assis Chateaubriand (A. Senna/C. Branco), Alca Da Ponte Das Bandeiras&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;318745&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Av Dos Bandeirantes(Marginal/Imigrantes) A Mais 34 Metros Da Av Washington Luis&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;291277&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Av Das Nacoes Unidas-Pista Central-(Interlagos/C.Branco) A Menos 7,3m Do Km 5,5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;162318&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Av Morvan D De Figueiredo (As/Cb), A Mais 3m R Amazonas Da Silva-Fx Excl Onibus&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;153131&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Rua Hungria (Interlagos/Castelo Branco) A Menos 20 Metros Da Avenida Reboucas&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;139048&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Av Morvan Dias De Figueiredo (As/Cb),A Mais 3m R Amazonas Da Silva&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;137064&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Rodovia Presidente Dutra (As/Cb), A Menos 75m Da Pte Pr J Quadros&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;134454&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Av Aricanduva (Bairro/Centro), A Mais15m Da Av Matapi - Fx Exclusiva De Onibus&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;127690&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Av Embaixador Macedo Soares, Sob Ponte Nova Fepasa, Sentido C. Branco/A. Senna&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;124927&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Agora vamos ver os motivos, em cada um desses lugares.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top10_locais %&amp;gt;%
  left_join(carros_eletronicas, by = &amp;quot;local&amp;quot;) %&amp;gt;%
  left_join(depara, by = &amp;quot;enquadramento&amp;quot;) %&amp;gt;%
  mutate(local = stringr::str_wrap(local, width = 20) %&amp;gt;% 
           forcats::fct_reorder(-n)) %&amp;gt;%
  group_by(local, agrup_enquadramento) %&amp;gt;%
  summarise(qtd = sum(qtd)) %&amp;gt;%
  ggplot(aes(x = local, y = qtd, fill = agrup_enquadramento)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-01-multas-em-sp_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;1000px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Por incrível que pareça, nos dois radares com mais multas, o motivo da multa é conversão proibida. A foto de onde fica esse radar saiu em uma &lt;a href=&#34;http://www1.folha.uol.com.br/cotidiano/2015/07/1660793-radar-campeao-aplica-375-mil-multas-em-um-ano-na-ponte-das-bandeiras.shtml&#34;&gt;notícia sobre o mesmo tema&lt;/a&gt; na Folha de São Paulo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-04-01-multas-em-sp_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>rstudio::conf: Sessão Final</title>
      <link>http://curso-r.com/blog/2017/03/16/2017-02-18-all-things-r-and-rstudio/</link>
      <pubDate>Thu, 16 Mar 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/03/16/2017-02-18-all-things-r-and-rstudio/</guid>
      <description>&lt;p&gt;No início de Janeiro desse ano ocorreu a primeira &lt;a href=&#34;https://www.rstudio.com/conference/&#34;&gt;rstudio::conf&lt;/a&gt;, uma conferência sobre R promovida pela Rstudio. A conferência parece ter sido bem animada! Teve até um passeio para o parque do Harry Potter na Florida, e surgiram memes como a imagem abaixo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://curso-r.com/blog/2017-02-18-all-things-r-and-rstudio_files/figure-html/hadley-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Em termos de conteúdo, parece que foi sensacional. Para quem não teve oportunidade de ir, os videos da conferência foram divulgados &lt;a href=&#34;https://www.rstudio.com/resources/webinars/#rstudioconf&#34;&gt;aqui&lt;/a&gt; como bem lembrado pelo &lt;a href=&#34;https://analisereal.com/2017/02/16/videos-da-rstudio-conference-disponiveis/&#34;&gt;blog Análise Real&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Eu ainda não tive tempo de passar por todas as palestras e comecei pelo fim. Vi o &lt;a href=&#34;https://www.rstudio.com/resources/videos/all-things-r-and-rstudio/&#34;&gt;vídeo&lt;/a&gt; da última sessão da conferência que era nada mais nada menos do que uma sessão de perguntas com J.J. Allaire, Hadley Wickham e Joe Cheng. Para quem não conhece, o primeiro é fundador do RStudio, outro é o criador do &lt;code&gt;tidyverse&lt;/code&gt;, &lt;code&gt;ggplot2&lt;/code&gt;, etc e o último é o criador do Shiny.&lt;/p&gt;
&lt;p&gt;A discussão foi muito interessante, tratando de importantes temas sobre o desenvolvimento do R. Vou resumir as minhas impressões nesse post, mas ressalvo que vale muito a pena ver &lt;a href=&#34;https://www.rstudio.com/resources/videos/all-things-r-and-rstudio/&#34;&gt;o vídeo&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;A sessão começa com 2 perguntas do moderador &lt;a href=&#34;https://www.rstudio.com/rviews/author/josephrickert/&#34;&gt;Joseph Rickert&lt;/a&gt;. A primeira falando sobre a conferência em que J.J., Joe e Hadley, é claro, estão muito satisfeitos. Gosto bastante da resposta do Hadley para essa pergunta:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nossa métrica de sucesso é o seu sucesso e é muito bom ver vocês usando as ferramentas que desenvolvemos para resolver problemas importantes. Isso é fantástico.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A segunda pergunta é filosófica, mas o objetivo é saber dos participantes o que os motiva nos trabalhos open-source. J.J. Allaire argumenta que desenvolver software &lt;em&gt;open-source&lt;/em&gt; é muito gratificante porque estes são duráveis, não estão ligados ao sucesso ou fracasso de nenhuma companhia. Ele acha que se você quer encontrar significado no seu trabalho e ver que seu software teve impacto na comunidade não tem nada melhor do que desenvolver &lt;em&gt;open-source&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A partir daí as perguntas são abertas ao público (11 min do vídeo). A primeira pergunta é bem interessante: Quais são os limites do R? A resposta do J.J. Allaire é muito boa e está razoavelmente bem explicada &lt;a href=&#34;https://www.rstudio.com/rviews/2016/10/12/interview-with-j-j-allaire/&#34;&gt;nessa entrevista&lt;/a&gt; que ele deu para o blog do RStudio em Outubro do ano passado. Basicamente, ele diz que se o R for encarado como uma linguagem de programação ele possui limites bem claros, porque o R não foi desenvolvido para ser uma linguagem de programação e sim para ser uma interface de usuário. O R, quando ainda era S, foi desenvolvido para ser uma interface para códigos em Fortran. Como interface de usuário, segundo Allaire, o R pode ser interligado sempre à melhor ferramenta de computação que existir. Portanto, se pensarmos no R como interface de usuário, não há limites. Ainda nesta pergunta, Joe Cheng fez uma comparação interessante entre R, Python e Go.&lt;/p&gt;
&lt;p&gt;Uma outra pergunta interessante é sobre como convencer quem usa Excel a começar a usar o R. As respostas são muito legais! O Hadley pensa que a primeira parte é mostrar o como com o R você pode ter facilidade para fazer diversas coisas, apresentar as comodidades que ele trás. O JJ Allaire, ressalta que a curva de aprendizado do R é muito mais lenta, por isso, educar e ajduar a tornar o processo de aprendizagem mais simples é crucial para que a adoção do R aumente quando comparado ao Excel.&lt;/p&gt;
&lt;p&gt;Enfim, a palestra passa por muitos outros assuntos interessantes como Deep Learning no R, o futuro do R quanto a tipagem (relacionando com TypeScript, etc.), ferramentas de teste para Shiny, inovação e empoderamento no R, R Users Group, paralelização, CRAN e Github e planos do RStudio para os próximos anos.&lt;/p&gt;
&lt;p&gt;Enfim, espero que este post tenha dado vontade de assistir o vídeo. Convido-os a comentar as partes que vocês acharam mais interessantes!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Manifesto tidy</title>
      <link>http://curso-r.com/blog/2017/02/15/2017-02-16-manifesto-tidy/</link>
      <pubDate>Wed, 15 Feb 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/02/15/2017-02-16-manifesto-tidy/</guid>
      <description>&lt;p&gt;O &lt;a href=&#34;https://cran.r-project.org/web/packages/tidyverse/vignettes/manifesto.html&#34;&gt;manifesto das ferramentas tidy&lt;/a&gt; do Hadley Wickham é um dos documentos mais importantes sobre R dos últimos tempos. Esse documento formaliza uma série de princípios que norteiam o desenvolvimento do &lt;a href=&#34;http://tidyverse.org/&#34;&gt;&lt;code&gt;tidyverse&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O &lt;a href=&#34;http://tidyverse.org/&#34;&gt;&lt;code&gt;tidyverse&lt;/code&gt;&lt;/a&gt;, também chamado por muitos de &lt;em&gt;hadleyverse&lt;/em&gt;, é um conjunto de pacotes que, por compartilharem esses princípios do manifesto tidy, podem ser utilizados naturalmente em conjunto. Pode-se dizer que existe o R antes do &lt;code&gt;tidyverse&lt;/code&gt; e o R depois do &lt;code&gt;tidyverse&lt;/code&gt;. A linguagem mudou muito, a comunidade abraçou fortemente o uso desses princípios e tem muita gente criando pacotes para conversar uns com os outros dessa forma. No entanto, usar a filosofia &lt;em&gt;tidy&lt;/em&gt; não é a única forma de fazer pacotes do R, existem muitos pacotes excelentes que não utilizam essa filosofia. Como o próprio texto diz “O contrário de &lt;em&gt;tidyverse&lt;/em&gt; não é o &lt;strong&gt;messy&lt;/strong&gt;verse, e sim muitos outros universos de pacotes interconectados.”.&lt;/p&gt;
&lt;p&gt;Os princípios fundamentais do &lt;code&gt;tidyverse&lt;/code&gt; são:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Reutilizar estruturas de dados existentes.&lt;/li&gt;
&lt;li&gt;Organizar funções simples usando o &lt;em&gt;pipe&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Aderir à programação funcional.&lt;/li&gt;
&lt;li&gt;Projetado para ser usado por seres humanos.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;No &lt;a href=&#34;https://cran.r-project.org/web/packages/tidyverse/vignettes/manifesto.html&#34;&gt;texto do manifesto tidy&lt;/a&gt; cada um dos lemas é descrito de forma detalhada. Aqui, selecionei os aspectos que achei mais importante de cada um deles.&lt;/p&gt;
&lt;div id=&#34;reutilizar-estruturas-de-dados-existentes&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reutilizar estruturas de dados existentes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Quando possível, é melhor utilizar estruturas de dados comuns do que criar uma estrutura específica para o seu pacote.&lt;/li&gt;
&lt;li&gt;Geralmente, é melhor reutilizar uma estrutura existente mesmo que ela não se encaixe perfeitamente.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;organizar-funcoes-simples-usando-o-pipe&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Organizar funções simples usando o &lt;em&gt;pipe&lt;/em&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Faça com que suas funções sejam o mais simples possíveis. Uma função deve poder ser descrita com apenas uma sentença.&lt;/li&gt;
&lt;li&gt;A sua função deve fazer uma transformação no estilo &lt;em&gt;copy-on-modify&lt;/em&gt; ou ter um efeito colateral. Nunca os dois.&lt;/li&gt;
&lt;li&gt;O nome das funções devem ser verbos. Exceto quando as funções do pacote usam sempre o mesmo verbo. Ex: adicionar ou modificar.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;aderir-a-programacao-funcional&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Aderir à programação funcional&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;O R é uma linguagem de &lt;a href=&#34;https://pt.wikipedia.org/wiki/Programa%C3%A7%C3%A3o_funcional&#34;&gt;programação funcional&lt;/a&gt;, não lute contra isso.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;projetado-para-ser-usado-por-seres-humanos&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Projetado para ser usado por seres humanos&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Desenvolva o seu pacote para ser usado por humanos. Foque em ter uma API clara para que você escreva o código de maneira intuitiva e rápida. Eficiência dos algoritmos é uma preocupação secundária, pois gastamos mais tempo escrevendo o código do que executando.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;Esses princípios são bem gerais, mas ajudam bastante a tomar decisões quando estamos escrevendo o nosso código. Para finalizar, clique &lt;a href=&#34;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=tidy+language%3Ar&#34;&gt;aqui&lt;/a&gt; e veja uma busca no Github por “tidy” em repositórios de R. São mais de 2000 resultados quase todos seguindo essa filosofia e estendendo o &lt;em&gt;universo arrumado&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>O blog do Curso R</title>
      <link>http://curso-r.com/blog/2017/02/15/2017-02-15-blog-curso-r/</link>
      <pubDate>Wed, 15 Feb 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/02/15/2017-02-15-blog-curso-r/</guid>
      <description>&lt;p&gt;Esse é o blog do Curso-R. Nós somos o Athos, Daniel, Fernando, Julio e William e seremos os autores dos posts desse blog. Aqui, vamos divulgar pequenas análises, novidades sobre o R e pequenas descobertas sobre estatística e Data Science. Sinta-se a vontade para comentar no espaço abaixo. Adoramos comentários! Também fique a vontade para compartilhar os nossos posts.&lt;/p&gt;
&lt;p&gt;O Curso-R surgiu em 2015 no programa de verão do Instituto de Matemática e Estatística da Universidade de São Paulo (IME-USP). o curso foi chamado de “Programação em R: do casual ao avançado”. Desde o começo, nós abraçamos a filosofia &lt;em&gt;Open Source&lt;/em&gt; - todo material que desenvolvemos fica disponível em nossa conta do &lt;a href=&#34;https://github.com/curso-r/&#34;&gt;Github&lt;/a&gt; de forma aberta para quem quiser usar. Em 2016 e 2017, ministramos novamente o curso no programa de verão e, depois de mais de 100 alunos formados, decidimos aumentar a gama de cursos e a frequência de ocorrência para que possamos atingir muito mais pessoas com essas tecnologias, pelas quais nós somos apaixonados.&lt;/p&gt;
&lt;p&gt;Esperamos que aprendam bastante e, principalmente, divirtam-se bastante lendo este blog!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>