<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Curso-R</title>
    <link>http://curso-r.com/tags/r/</link>
    <description>Recent content in R on Curso-R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>Copyright (c) 2016 - 2017, Curso-R; all rights reserved.</copyright>
    <lastBuildDate>Mon, 07 Aug 2017 10:12:00 +0300</lastBuildDate>
    
	<atom:link href="http://curso-r.com/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mínimos quadrados com restrições lineares</title>
      <link>http://curso-r.com/blog/2017/08/07/2017-08-07-minimos-quadrados-restrito/</link>
      <pubDate>Mon, 07 Aug 2017 10:12:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/08/07/2017-08-07-minimos-quadrados-restrito/</guid>
      <description>A característica mais importante de um modelo estatístico é a sua flexibilidade. Esse termo pode ser entendido de várias formas, mas neste texto vou considerar que um modelo é flexível se ele explica coerentemente uma ampla gama de fenômenos reais.
Pensando assim, a regressão linear pode ser considerada um modelo flexível, já que muitas relações funcionais cotidianas são do tipo \(y = \beta x\). É justamente por causa dessa flexibilidade que a boa e velha regressão de mínimos quadrados é tão usada, até mesmo aonde não deveria.</description>
    </item>
    
    <item>
      <title>Quebrando CAPTCHAs - Parte IV: Trabalhando com a imagem completa</title>
      <link>http://curso-r.com/blog/2017/07/31/2017-06-29-captcha-dados/</link>
      <pubDate>Mon, 31 Jul 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/31/2017-06-29-captcha-dados/</guid>
      <description>No último post sobre CAPTCHAs nós vimos que a segmentação das imagens (separar uma imagem em várias imagens, uma para cada caractere) é um problema complicado. Definir uma largura fixa ou utilizar outros métodos ad-hoc para segmentar as imagens pode dar bons frutos, mas não é o suficiente para quebrar CAPTCHAs mais complexos, como o da Receita Federal.
Alguns meses atrás, tentamos resolver esse problema de várias formas. Uma delas foi utilizar algoritmos de agrupamento (\(k\)-médias) ou de identificação de conjuntos conectados.</description>
    </item>
    
    <item>
      <title>Quebrando CAPTCHAs - Parte III: Segmentação de imagens</title>
      <link>http://curso-r.com/blog/2017/07/22/2017-06-29-captcha-segment/</link>
      <pubDate>Sat, 22 Jul 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/22/2017-06-29-captcha-segment/</guid>
      <description>Nesse post vamos discutir um pouco sobre modelar CAPTCHAs. Vou assumir que você já viu o post de introdução e o post sobre download, leitura e classificação manual de CAPTCHAs.
Digamos que você tenha uma base de dados de treino composta por \(N\) imagens com os textos classificados. Nossa resposta nesse caso é uma palavra de \(k\) caracteres (vamos considerar \(k\) fixado), sendo que cada caractere \(c\) pode ter \(p\) valores.</description>
    </item>
    
    <item>
      <title>Salvando data.frames: uma comparação</title>
      <link>http://curso-r.com/blog/2017/07/20/2017-07-20-escrevendo-data-frames/</link>
      <pubDate>Thu, 20 Jul 2017 00:26:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/20/2017-07-20-escrevendo-data-frames/</guid>
      <description>Salvar data.frames para ler depois é uma tarefa muito comum para quem trabalha com R, principalmente quando o seu processo possui algumas etapas mais demoradas e você não quer ter que rodar tudo de novo.
Veja aqui 3 formas fáceis, e rápidas para salvar o seu banco de dados e não perder tempo lendo novamente.
saveRDS Talvez a função mais conhecida para salvar objetos do R. Ela salva em um formato binário que só pode ser lido pelo R.</description>
    </item>
    
    <item>
      <title>Quebrando CAPTCHAs - Parte II: O pacote decryptr</title>
      <link>http://curso-r.com/blog/2017/07/10/2017-06-29-captcha-decryptr/</link>
      <pubDate>Mon, 10 Jul 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/10/2017-06-29-captcha-decryptr/</guid>
      <description>No meu último post anunciei que começaríamos uma série sobre CAPTCHAs. Uma da nossas iniciativas principais nesse tema é a criação do pacote decryptr. Hoje veremos como usar algumas das funções principais desse pacote.
Suposições do decryptr Ao criar o decryptr reduzimos um pouco o escopo de CAPTCHAs que gostaríamos de incluir. Fizemos isso para não ficarmos malucos, pois existem diversos tipos de testes disponíveis na web!</description>
    </item>
    
    <item>
      <title>Quebrando CAPTCHAs - Introdução</title>
      <link>http://curso-r.com/blog/2017/06/28/2017-06-29-captcha-intro/</link>
      <pubDate>Wed, 28 Jun 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/06/28/2017-06-29-captcha-intro/</guid>
      <description>CAPTCHAs? SIM, CAPTCHAs Sabe aquelas imagens chatas que aparecem quando você está preenchendo um formulário ou quer acessar uma página específica, pedindo para você decifrar o texto? Isso é o que chamamos de CAPTCHA (Completely Automated Public Turing test to tell Computers and Humans Apart). Captchas foram criados para impedir que robôs acessem determinadas páginas na web de forma irrestrita. Algumas empresas como a Google também usam essas coisinhas para utilizar o conhecimento de seres humanos para dominar o mundo.</description>
    </item>
    
    <item>
      <title>Keras: colocando deep learning no pipeline</title>
      <link>http://curso-r.com/blog/2017/06/05/2017-06-05-keras/</link>
      <pubDate>Mon, 05 Jun 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/06/05/2017-06-05-keras/</guid>
      <description>Esse é o Daniel Falbel, um dos sócios da Curso-R e autor de diversos posts no nosso blog. Boa pinta, não?
Mas esse não é só um rostinho bonito. Recente, o Dani fez uma contribuição PROFUNDA para a comunidade R: ele é um dos responsáveis pelo pacote keras, que faz uma interface com a biblioteca de mesmo nome utilizada para ajustar modelos de deep learning usando TensorFlow.
Veja o arquivo DESCRIPTION (metadados) desse pacote:</description>
    </item>
    
    <item>
      <title>R 3.4 disponível!</title>
      <link>http://curso-r.com/blog/2017/04/24/2017-04-24-r34/</link>
      <pubDate>Mon, 24 Apr 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/04/24/2017-04-24-r34/</guid>
      <description>A versão 3.4 do R (You Stupid Darkness) foi lançada nesse final de semana! A atualização tem foco principal na performance. Principais mudanças:
Agora temos um compilador JIT (Just In Time) como padrão! Isso significa que você não precisará mais usar a função compiler::cmpfun() para acelerar suas funções na maioria dos casos. Mais sobre isso abaixo. O for ficou mais eficiente. Agora a alocação dinâmica de vetores está mais rápida, diminuindo ainda mais a diferença entre utilizar for e funcionais como sapply(), que trabalham com um vetor pré alocado.</description>
    </item>
    
  </channel>
</rss>