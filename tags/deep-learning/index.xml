<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Learning on Curso-R</title>
    <link>http://curso-r.com/tags/deep-learning/</link>
    <description>Recent content in Deep Learning on Curso-R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>Copyright (c) 2016 - 2017, Curso-R; all rights reserved.</copyright>
    <lastBuildDate>Sat, 29 Jul 2017 10:12:00 +0300</lastBuildDate>
    
	<atom:link href="http://curso-r.com/tags/deep-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Regressão Logística em: a menor deep learning do mundo</title>
      <link>http://curso-r.com/blog/2017/07/29/2017-07-29-segundo-menor-dl/</link>
      <pubDate>Sat, 29 Jul 2017 10:12:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/07/29/2017-07-29-segundo-menor-dl/</guid>
      <description>Objetivos A finalidade do post é:
 aprender a fazer uma regressão logística com o keras aprender a fazer um PCA com o keras aproximar o Deep Learning do que já havia de conhecido pela maioria dos analistas de dados. instigar a todos que vieram antes do deep learning a estudar e a ficar à vontade com as novidades em torno dela. mostrar que muitos profissionais inseridos na área de machine learning já conheciam grande parte do que o deep learning usa.</description>
    </item>
    
    <item>
      <title>Construindo Autoencoders</title>
      <link>http://curso-r.com/blog/2017/06/26/2017-06-26-construindo-autoencoders/</link>
      <pubDate>Mon, 26 Jun 2017 10:12:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/06/26/2017-06-26-construindo-autoencoders/</guid>
      <description>Autoencoders são redes neurais treinadas com o objetivo de copiar o seu input para o seu output. Esse interesse pode parecer meio estranho, mas na prática o objetivo é aprender representações (encodings) dos dados, que podem ser usadas para redução de dimensionalidade ou até mesmo compressão de arquivos.
Basicamente, um autoencoder é dividido em duas partes:
 um encoder que é uma função \(f(x)\) que transforma o input para uma representação \(h\) um decoder que é uma função \(g(x)\) que transforma a representação \(h\) em sua reconstrução \(r\)  Imagem do blog do Keras</description>
    </item>
    
    <item>
      <title>Instalando Anaconda &#43; TensorFlow &#43; Keras para R no Ubuntu 16.04 Server</title>
      <link>http://curso-r.com/blog/2017/06/08/2017-06-08-keras-no-ubuntu/</link>
      <pubDate>Thu, 08 Jun 2017 21:12:00 +0300</pubDate>
      
      <guid>http://curso-r.com/blog/2017/06/08/2017-06-08-keras-no-ubuntu/</guid>
      <description>Compilei um passo a passo mais simplificado dos posts que usei pra conseguir usar o Keras num servidor Ubuntu.
Esse tutorial ensinará como instalar o Anaconda com Python 3.5 em um servidor Ubuntu 16.04 + Keras para R. Então ao final desse post você terá o Keras direto do seu R pronto para abalar os profundos mares da aprendizagem de máquinas.
Pré-requisitos O tutorial supõe que você possui um servidor Ubuntu 16.</description>
    </item>
    
    <item>
      <title>Keras: colocando deep learning no pipeline</title>
      <link>http://curso-r.com/blog/2017/06/05/2017-06-05-keras/</link>
      <pubDate>Mon, 05 Jun 2017 13:07:31 +0200</pubDate>
      
      <guid>http://curso-r.com/blog/2017/06/05/2017-06-05-keras/</guid>
      <description>Esse é o Daniel Falbel, um dos sócios da Curso-R e autor de diversos posts no nosso blog. Boa pinta, não?
Mas esse não é só um rostinho bonito. Recente, o Dani fez uma contribuição PROFUNDA para a comunidade R: ele é um dos responsáveis pelo pacote keras, que faz uma interface com a biblioteca de mesmo nome utilizada para ajustar modelos de deep learning usando TensorFlow.
Veja o arquivo DESCRIPTION (metadados) desse pacote:</description>
    </item>
    
  </channel>
</rss>